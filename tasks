//Задана последовательность n целых чисел. Вычислить сумму чисел, порядковые номера которых совпадают со значением этого числа.
int n,s,k;
Console.WriteLine("Введите размер массива: ");
n = Convert.ToInt32(Console.ReadLine());
int[] a = new int[n];
Console.WriteLine("Введите элементы массива: ");
for (int i = 0; i < n; i++)
{
    a[i] = Convert.ToInt32(Console.ReadLine());
}
Console.WriteLine("Матрица: ");
for (int i = 0; i < n; i++)
{
    Console.WriteLine(a[i]);
}
Console.WriteLine("______________________________");
s = 0;
for (int i = 0; i < n; i++)
{
    if (a[i] == i)
    {
        s = s + a[i
    }
    
}
Console.WriteLine(s);
Console.ReadKey();


int k = 0, p = 1,s,l,q;
Console.WriteLine("Строки ");
int n = int.Parse(Console.ReadLine());
Console.WriteLine("Столбы");
int m = int.Parse(Console.ReadLine());
int[,] arr = new int[n, m];

//Дана последовательность действительных чисел. заменить все ее члены, большие заданного числа k, этим числом. Подсчитать количество замен. ВАЖНО!! КОД НЕ ТОЧНЫЙ, НУЖНО ПЕРЕДЕЛАТЬ НЕ ПОПАДИСЬ БЛЯТЬ!
using System;

namespace example
{
    class Program
    {
        static void Main(string[] args)
        {
            double[] seq = { 7.3, 12.6, 15.4, 23.1, 7.6, 45.3, 1.8, 0.3, 12.7, 11.2, 47.1, 3.5, 13.4, 7.2, 1.3 };
            foreach (var s in seq) Console.WriteLine("{0,5}", s);
            Console.Write("\nВведите число: ");
            double k = Int32.Parse(Console.ReadLine());
            uint count = 0;
            for (uint n = 0; n < seq.Length; n++)
                if (seq[n] > n)
                {
                    seq[n] = n;
                    ++count;
                }
            foreach (var s in seq) Console.WriteLine("{0,5}", s);
            Console.WriteLine("\nКоличество: {0}", count);
            Console.ReadKey();
        }
    }
}
Console.WriteLine("Ввод");
for (int i = 0; i <= n - 1; i++)
    for (int j = 0; j <= m - 1; j++)
        arr[i, j] = Convert.ToInt32(Console.ReadLine());
for (int i = 0; i < n; i++) // вывели двумерный массив
{
    Console.WriteLine(); // для математической матрицы
    for (int j = 0; j < m; j++)
        Console.Write(arr[i, j] + "  "); // для математической матрицы
}
for (int j = 0; j <= m - 1; j++)
{
    s = k = 0;
    for (int i = 0; i <= n - 1; i++)
        if (arr[i, j] % 2 != 0)
        {
            s = s + arr[i, j]; k++;
        }
    q = s / k;
    Console.WriteLine();
    Console.WriteLine("Среднее арифметическое всех нечётных элементов в каждом столбце " + q);
    Console.ReadKey();
}
      
// кратность на нечётное
int m, n, i, j, s, k, q;
Console.WriteLine("Введите кол-во строк");
m = Convert.ToInt32(Console.ReadLine());
Console.WriteLine("Введите кол-во столбцов");
n = Convert.ToInt32(Console.ReadLine());
int[,] arr = new int[n, m];
Console.WriteLine("Введите элементы");
for (i = 0; i <= n - 1; i++)
    for (j = 0; j <= m - 1; j++)
        arr[i, j] = Convert.ToInt32(Console.ReadLine());
Console.WriteLine("Вывод");
for (i = 0; i <= n - 1; i++)
{
    Console.WriteLine();
    for (j = 0; j <= m - 1; j++)
    Console.Write(arr[i, j] + " ");
}
for (j = 0; j <= m - 1; j++)
{
    s = k = 0;
    for (i = 0; i <= n - 1; i++)
    if (arr[i, j] % 2 != 0)
    {
        s = s + arr[i, j]; k++;
    }
    q = s / k;
    Console.WriteLine(q);
}

Console.ReadKey();

// Дан двумерный массив, сформировать одномерный из минимальных элементов каждого столбца матрицы
int n, m, i, j, min;
Console.WriteLine("n = ");
n = Convert.ToInt32(Console.ReadLine());
Console.WriteLine("m = ");
m = Convert.ToInt32(Console.ReadLine());
int [,] a = new int [n, m];
int [] b = new int[m];
for (i = 0; j <= n - 1; i++)
    for (j = 0; j <= m - 1; j++)
    {
        a[i, j] = Convert.ToInt32(Console.ReadLine());
    }
for (j = 0; j <= m - 1; j++)
   {
        min = a[0, j];
        for (i = 1; i = n - 1; i++)
            if (min > a[i, j] { min = a[i, j]; }
        b[j] = min;
   }
for (j = 0; j <= m - 1; j++) { Console.WriteLine($"b[j] = {b[j]}"); }
Console.ReadKey();


Определить количество элементов последовательности натуральных чисел, кратных числу m и заключенных в промежутке от L до N.
int n, m, L, N;
Console.WriteLine("Кол-во элементов - ");
Console.WriteLine("Чему кратно - ");
Console.WriteLine("Начало промежутка (L) - ");
Console.WriteLine("Конец промежутка(N) - ");
int [] a = new int[n];
var k = 0;
for (int i = 0; i <= n - 1; i++) { Convert.ToInt32(Console.ReadLine()); }
{
    if (a[i] % m == 0)
    {
        if (a[i] >= L)
        {
            if (a[i] <= N)
            {
                k++
            }
        }
    }
}
Console.WriteLine($"k = {k}")
Console.ReadKey();
